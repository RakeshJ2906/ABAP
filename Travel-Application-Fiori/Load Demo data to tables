CLASS zcl_gen_demo_data_travel_app DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES if_oo_adt_classrun.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_gen_demo_data_travel_app IMPLEMENTATION.


  METHOD if_oo_adt_classrun~main.

    " delete existing entries in the database table
    DELETE FROM zrap_tb_travel.
    DELETE FROM zrap_tb_booking.
    DELETE FROM zrap_tb_book_sup.

    " insert travel demo data
    INSERT zrap_tb_travel FROM (
        SELECT
          FROM /dmo/travel
          FIELDS
            travel_id     AS travel_id,
            agency_id     AS agency_id,
            customer_id   AS customer_id,
            begin_date    AS begin_date,
            end_date      AS end_date,
            booking_fee   AS booking_fee,
            total_price   AS total_price,
            currency_code AS currency_code,
            description   AS description,
            CASE status
              WHEN 'B' THEN 'A' " accepted
              WHEN 'X' THEN 'X' " cancelled
              ELSE 'O'          " open
            END           AS overall_status,
            createdby     AS created_by,
            createdat     AS created_at,
            lastchangedby AS last_changed_by,
            lastchangedat AS last_changed_at,
            lastchangedat AS local_last_changed_at
            ORDER BY travel_id UP TO 200 ROWS
      ).
    COMMIT WORK.

    " insert booking demo data
    INSERT zrap_tb_booking FROM (
        SELECT
          FROM   /dmo/booking AS booking
            JOIN zrap_tb_travel AS z
            ON   booking~travel_id = z~travel_id
          FIELDS
            z~travel_id             AS travel_id,
            booking~booking_id      AS booking_id,
            booking~booking_date    AS booking_date,
            booking~customer_id     AS customer_id,
            booking~carrier_id      AS carrier_id,
            booking~connection_id   AS connection_id,
            booking~flight_date     AS flight_date,
            booking~flight_price    AS flight_price,
            booking~currency_code   AS currency_code,
            'N' AS booking_status,
            z~created_by            AS created_by,
            z~last_changed_by       AS last_changed_by,
            z~last_changed_at       AS local_last_changed_at
      ).
    COMMIT WORK.

    " insert booking demo data
    INSERT zrap_tb_book_sup FROM (
        SELECT
          FROM  /dmo/book_suppl AS book_sup
            JOIN zrap_tb_booking AS z
            ON book_sup~travel_id = z~travel_id
            AND book_sup~booking_id = z~booking_id
          FIELDS
            z~travel_id                     AS travel_id,
            z~booking_id                    AS booking_id,
            book_sup~booking_supplement_id  AS booking_supplement_id,
            book_sup~supplement_id          AS supplement_id,
            book_sup~price                  AS price,
            book_sup~currency_code          AS currency_code,
            z~created_by                    AS created_by,
            z~last_changed_by               AS last_changed_by,
            z~local_last_changed_at         AS local_last_changed_at
      ).
    COMMIT WORK.

    out->write( 'Travel and booking demo data inserted.' ).

  ENDMETHOD.
ENDCLASS.
